Index.PACKAGES = {"libra.si" : [{"name" : "libra.si.BaseQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "mA", "tail" : "(): QuantityOf[A, Current, MilliAmpere]", "member" : "libra.si.BaseQuantityOps.mA", "link" : "libra\/si\/package$$BaseQuantityOps.html#mA:libra.QuantityOf[A,libra.si.package.Current,libra.si.package.MilliAmpere]", "kind" : "def"}, {"label" : "A", "tail" : "(): QuantityOf[A, Current, Ampere]", "member" : "libra.si.BaseQuantityOps.A", "link" : "libra\/si\/package$$BaseQuantityOps.html#A:libra.QuantityOf[A,libra.si.package.Current,libra.si.package.Ampere]", "kind" : "def"}, {"member" : "libra.si.BaseQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.BaseQuantityOps.a", "link" : "libra\/si\/package$$BaseQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$BaseQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$BaseQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$BaseQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$BaseQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$BaseQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$BaseQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$BaseQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$BaseQuantityOps.html", "kind" : "class"}, {"name" : "libra.si.ForceQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "N", "tail" : "(): ForceQuantity[A, Kilogram, Metre, Second]", "member" : "libra.si.ForceQuantityOps.N", "link" : "libra\/si\/package$$ForceQuantityOps.html#N:libra.si.package.ForceQuantity[A,libra.si.package.Kilogram,libra.si.package.Metre,libra.si.package.Second]", "kind" : "def"}, {"member" : "libra.si.ForceQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.ForceQuantityOps.a", "link" : "libra\/si\/package$$ForceQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$ForceQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$ForceQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$ForceQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$ForceQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$ForceQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$ForceQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$ForceQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$ForceQuantityOps.html", "kind" : "class"}, {"name" : "libra.si.MetricUnit", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/si\/MetricUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/si\/MetricUnit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/si\/MetricUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/si\/MetricUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/si\/MetricUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/si\/MetricUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/si\/MetricUnit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/si\/MetricUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/si\/MetricUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/si\/MetricUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/si\/MetricUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/si\/MetricUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/si\/MetricUnit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/si\/MetricUnit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/si\/MetricUnit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/si\/MetricUnit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/si\/MetricUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/MetricUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/MetricUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "libra\/si\/MetricUnit.html", "kind" : "trait"}, {"name" : "libra.si.MomentumQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "Ns", "tail" : "(): MomentumQuantity[A, Kilogram, Metre, Second]", "member" : "libra.si.MomentumQuantityOps.Ns", "link" : "libra\/si\/package$$MomentumQuantityOps.html#Ns:libra.si.package.MomentumQuantity[A,libra.si.package.Kilogram,libra.si.package.Metre,libra.si.package.Second]", "kind" : "def"}, {"label" : "kgmps", "tail" : "(): MomentumQuantity[A, Kilogram, Metre, Second]", "member" : "libra.si.MomentumQuantityOps.kgmps", "link" : "libra\/si\/package$$MomentumQuantityOps.html#kgmps:libra.si.package.MomentumQuantity[A,libra.si.package.Kilogram,libra.si.package.Metre,libra.si.package.Second]", "kind" : "def"}, {"member" : "libra.si.MomentumQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.MomentumQuantityOps.a", "link" : "libra\/si\/package$$MomentumQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$MomentumQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$MomentumQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$MomentumQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$MomentumQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$MomentumQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$MomentumQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$MomentumQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$MomentumQuantityOps.html", "kind" : "class"}, {"name" : "libra.si.SIAccellerationQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "amps2", "tail" : "(): AccelerationQuantity[A, Attometre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.amps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#amps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Attometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "fmps2", "tail" : "(): AccelerationQuantity[A, Femtometre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.fmps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#fmps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Femtometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "pmps2", "tail" : "(): AccelerationQuantity[A, Picometre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.pmps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#pmps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Picometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "nmps2", "tail" : "(): AccelerationQuantity[A, Nanometre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.nmps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#nmps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Nanometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "Î¼mps2", "tail" : "(): AccelerationQuantity[A, Micrometre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.Î¼mps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#Î¼mps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Micrometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "mmps2", "tail" : "(): AccelerationQuantity[A, Millimetre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.mmps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#mmps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Millimetre,libra.si.package.Second]", "kind" : "def"}, {"label" : "cmps2", "tail" : "(): AccelerationQuantity[A, Centimetre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.cmps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#cmps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Centimetre,libra.si.package.Second]", "kind" : "def"}, {"label" : "dmps2", "tail" : "(): AccelerationQuantity[A, Decimetre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.dmps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#dmps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Decimetre,libra.si.package.Second]", "kind" : "def"}, {"label" : "mps2", "tail" : "(): AccelerationQuantity[A, Metre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.mps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#mps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Metre,libra.si.package.Second]", "kind" : "def"}, {"label" : "kmps2", "tail" : "(): AccelerationQuantity[A, Kilometre, Second]", "member" : "libra.si.SIAccellerationQuantityOps.kmps2", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#kmps2:libra.si.package.AccelerationQuantity[A,libra.si.package.Kilometre,libra.si.package.Second]", "kind" : "def"}, {"member" : "libra.si.SIAccellerationQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.SIAccellerationQuantityOps.a", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$SIAccellerationQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$SIAccellerationQuantityOps.html", "kind" : "class"}, {"name" : "libra.si.SILengthQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "am", "tail" : "(): QuantityOf[A, Length, Attometre]", "member" : "libra.si.SILengthQuantityOps.am", "link" : "libra\/si\/package$$SILengthQuantityOps.html#am:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Attometre]", "kind" : "def"}, {"label" : "fm", "tail" : "(): QuantityOf[A, Length, Femtometre]", "member" : "libra.si.SILengthQuantityOps.fm", "link" : "libra\/si\/package$$SILengthQuantityOps.html#fm:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Femtometre]", "kind" : "def"}, {"label" : "pm", "tail" : "(): QuantityOf[A, Length, Picometre]", "member" : "libra.si.SILengthQuantityOps.pm", "link" : "libra\/si\/package$$SILengthQuantityOps.html#pm:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Picometre]", "kind" : "def"}, {"label" : "nm", "tail" : "(): QuantityOf[A, Length, Nanometre]", "member" : "libra.si.SILengthQuantityOps.nm", "link" : "libra\/si\/package$$SILengthQuantityOps.html#nm:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Nanometre]", "kind" : "def"}, {"label" : "Î¼m", "tail" : "(): QuantityOf[A, Length, Micrometre]", "member" : "libra.si.SILengthQuantityOps.Î¼m", "link" : "libra\/si\/package$$SILengthQuantityOps.html#Î¼m:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Micrometre]", "kind" : "def"}, {"label" : "mm", "tail" : "(): QuantityOf[A, Length, Millimetre]", "member" : "libra.si.SILengthQuantityOps.mm", "link" : "libra\/si\/package$$SILengthQuantityOps.html#mm:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Millimetre]", "kind" : "def"}, {"label" : "cm", "tail" : "(): QuantityOf[A, Length, Centimetre]", "member" : "libra.si.SILengthQuantityOps.cm", "link" : "libra\/si\/package$$SILengthQuantityOps.html#cm:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Centimetre]", "kind" : "def"}, {"label" : "dm", "tail" : "(): QuantityOf[A, Length, Decimetre]", "member" : "libra.si.SILengthQuantityOps.dm", "link" : "libra\/si\/package$$SILengthQuantityOps.html#dm:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Decimetre]", "kind" : "def"}, {"label" : "m", "tail" : "(): QuantityOf[A, Length, Metre]", "member" : "libra.si.SILengthQuantityOps.m", "link" : "libra\/si\/package$$SILengthQuantityOps.html#m:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Metre]", "kind" : "def"}, {"label" : "km", "tail" : "(): QuantityOf[A, Length, Kilometre]", "member" : "libra.si.SILengthQuantityOps.km", "link" : "libra\/si\/package$$SILengthQuantityOps.html#km:libra.QuantityOf[A,libra.si.package.Length,libra.si.package.Kilometre]", "kind" : "def"}, {"member" : "libra.si.SILengthQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.SILengthQuantityOps.a", "link" : "libra\/si\/package$$SILengthQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$SILengthQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$SILengthQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$SILengthQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$SILengthQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$SILengthQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$SILengthQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$SILengthQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$SILengthQuantityOps.html", "kind" : "class"}, {"name" : "libra.si.SIMassQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "ag", "tail" : "(): QuantityOf[A, Mass, Attogram]", "member" : "libra.si.SIMassQuantityOps.ag", "link" : "libra\/si\/package$$SIMassQuantityOps.html#ag:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Attogram]", "kind" : "def"}, {"label" : "fg", "tail" : "(): QuantityOf[A, Mass, Femtogram]", "member" : "libra.si.SIMassQuantityOps.fg", "link" : "libra\/si\/package$$SIMassQuantityOps.html#fg:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Femtogram]", "kind" : "def"}, {"label" : "pg", "tail" : "(): QuantityOf[A, Mass, Picogram]", "member" : "libra.si.SIMassQuantityOps.pg", "link" : "libra\/si\/package$$SIMassQuantityOps.html#pg:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Picogram]", "kind" : "def"}, {"label" : "ng", "tail" : "(): QuantityOf[A, Mass, Nanogram]", "member" : "libra.si.SIMassQuantityOps.ng", "link" : "libra\/si\/package$$SIMassQuantityOps.html#ng:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Nanogram]", "kind" : "def"}, {"label" : "Î¼g", "tail" : "(): QuantityOf[A, Mass, Microgram]", "member" : "libra.si.SIMassQuantityOps.Î¼g", "link" : "libra\/si\/package$$SIMassQuantityOps.html#Î¼g:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Microgram]", "kind" : "def"}, {"label" : "mg", "tail" : "(): QuantityOf[A, Mass, Milligram]", "member" : "libra.si.SIMassQuantityOps.mg", "link" : "libra\/si\/package$$SIMassQuantityOps.html#mg:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Milligram]", "kind" : "def"}, {"label" : "cg", "tail" : "(): QuantityOf[A, Mass, Centigram]", "member" : "libra.si.SIMassQuantityOps.cg", "link" : "libra\/si\/package$$SIMassQuantityOps.html#cg:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Centigram]", "kind" : "def"}, {"label" : "dg", "tail" : "(): QuantityOf[A, Mass, Decigram]", "member" : "libra.si.SIMassQuantityOps.dg", "link" : "libra\/si\/package$$SIMassQuantityOps.html#dg:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Decigram]", "kind" : "def"}, {"label" : "g", "tail" : "(): QuantityOf[A, Mass, Gram]", "member" : "libra.si.SIMassQuantityOps.g", "link" : "libra\/si\/package$$SIMassQuantityOps.html#g:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Gram]", "kind" : "def"}, {"label" : "kg", "tail" : "(): QuantityOf[A, Mass, Kilogram]", "member" : "libra.si.SIMassQuantityOps.kg", "link" : "libra\/si\/package$$SIMassQuantityOps.html#kg:libra.QuantityOf[A,libra.si.package.Mass,libra.si.package.Kilogram]", "kind" : "def"}, {"member" : "libra.si.SIMassQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.SIMassQuantityOps.a", "link" : "libra\/si\/package$$SIMassQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$SIMassQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$SIMassQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$SIMassQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$SIMassQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$SIMassQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$SIMassQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$SIMassQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$SIMassQuantityOps.html", "kind" : "class"}, {"name" : "libra.si.SITimeQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "as", "tail" : "(): QuantityOf[A, Time, Attosecond]", "member" : "libra.si.SITimeQuantityOps.as", "link" : "libra\/si\/package$$SITimeQuantityOps.html#as:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Attosecond]", "kind" : "def"}, {"label" : "fs", "tail" : "(): QuantityOf[A, Time, Femtosecond]", "member" : "libra.si.SITimeQuantityOps.fs", "link" : "libra\/si\/package$$SITimeQuantityOps.html#fs:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Femtosecond]", "kind" : "def"}, {"label" : "ps", "tail" : "(): QuantityOf[A, Time, Picosecond]", "member" : "libra.si.SITimeQuantityOps.ps", "link" : "libra\/si\/package$$SITimeQuantityOps.html#ps:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Picosecond]", "kind" : "def"}, {"label" : "ns", "tail" : "(): QuantityOf[A, Time, Nanosecond]", "member" : "libra.si.SITimeQuantityOps.ns", "link" : "libra\/si\/package$$SITimeQuantityOps.html#ns:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Nanosecond]", "kind" : "def"}, {"label" : "Î¼s", "tail" : "(): QuantityOf[A, Time, Microsecond]", "member" : "libra.si.SITimeQuantityOps.Î¼s", "link" : "libra\/si\/package$$SITimeQuantityOps.html#Î¼s:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Microsecond]", "kind" : "def"}, {"label" : "ms", "tail" : "(): QuantityOf[A, Time, Millisecond]", "member" : "libra.si.SITimeQuantityOps.ms", "link" : "libra\/si\/package$$SITimeQuantityOps.html#ms:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Millisecond]", "kind" : "def"}, {"label" : "cs", "tail" : "(): QuantityOf[A, Time, Centisecond]", "member" : "libra.si.SITimeQuantityOps.cs", "link" : "libra\/si\/package$$SITimeQuantityOps.html#cs:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Centisecond]", "kind" : "def"}, {"label" : "ds", "tail" : "(): QuantityOf[A, Time, Decisecond]", "member" : "libra.si.SITimeQuantityOps.ds", "link" : "libra\/si\/package$$SITimeQuantityOps.html#ds:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Decisecond]", "kind" : "def"}, {"label" : "s", "tail" : "(): QuantityOf[A, Time, Second]", "member" : "libra.si.SITimeQuantityOps.s", "link" : "libra\/si\/package$$SITimeQuantityOps.html#s:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Second]", "kind" : "def"}, {"label" : "ks", "tail" : "(): QuantityOf[A, Time, Kilosecond]", "member" : "libra.si.SITimeQuantityOps.ks", "link" : "libra\/si\/package$$SITimeQuantityOps.html#ks:libra.QuantityOf[A,libra.si.package.Time,libra.si.package.Kilosecond]", "kind" : "def"}, {"member" : "libra.si.SITimeQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.SITimeQuantityOps.a", "link" : "libra\/si\/package$$SITimeQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$SITimeQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$SITimeQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$SITimeQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$SITimeQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$SITimeQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$SITimeQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$SITimeQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$SITimeQuantityOps.html", "kind" : "class"}, {"name" : "libra.si.SIVelocityQuantityOps", "shortDescription" : "", "members_class" : [{"label" : "amps", "tail" : "(): VelocityQuantity[A, Attometre, Second]", "member" : "libra.si.SIVelocityQuantityOps.amps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#amps:libra.si.package.VelocityQuantity[A,libra.si.package.Attometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "fmps", "tail" : "(): VelocityQuantity[A, Femtometre, Second]", "member" : "libra.si.SIVelocityQuantityOps.fmps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#fmps:libra.si.package.VelocityQuantity[A,libra.si.package.Femtometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "pmps", "tail" : "(): VelocityQuantity[A, Picometre, Second]", "member" : "libra.si.SIVelocityQuantityOps.pmps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#pmps:libra.si.package.VelocityQuantity[A,libra.si.package.Picometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "nmps", "tail" : "(): VelocityQuantity[A, Nanometre, Second]", "member" : "libra.si.SIVelocityQuantityOps.nmps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#nmps:libra.si.package.VelocityQuantity[A,libra.si.package.Nanometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "Î¼mps", "tail" : "(): VelocityQuantity[A, Micrometre, Second]", "member" : "libra.si.SIVelocityQuantityOps.Î¼mps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#Î¼mps:libra.si.package.VelocityQuantity[A,libra.si.package.Micrometre,libra.si.package.Second]", "kind" : "def"}, {"label" : "mmps", "tail" : "(): VelocityQuantity[A, Millimetre, Second]", "member" : "libra.si.SIVelocityQuantityOps.mmps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#mmps:libra.si.package.VelocityQuantity[A,libra.si.package.Millimetre,libra.si.package.Second]", "kind" : "def"}, {"label" : "cmps", "tail" : "(): VelocityQuantity[A, Centimetre, Second]", "member" : "libra.si.SIVelocityQuantityOps.cmps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#cmps:libra.si.package.VelocityQuantity[A,libra.si.package.Centimetre,libra.si.package.Second]", "kind" : "def"}, {"label" : "dmps", "tail" : "(): VelocityQuantity[A, Decimetre, Second]", "member" : "libra.si.SIVelocityQuantityOps.dmps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#dmps:libra.si.package.VelocityQuantity[A,libra.si.package.Decimetre,libra.si.package.Second]", "kind" : "def"}, {"label" : "mps", "tail" : "(): VelocityQuantity[A, Metre, Second]", "member" : "libra.si.SIVelocityQuantityOps.mps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#mps:libra.si.package.VelocityQuantity[A,libra.si.package.Metre,libra.si.package.Second]", "kind" : "def"}, {"label" : "kmps", "tail" : "(): VelocityQuantity[A, Kilometre, Second]", "member" : "libra.si.SIVelocityQuantityOps.kmps", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#kmps:libra.si.package.VelocityQuantity[A,libra.si.package.Kilometre,libra.si.package.Second]", "kind" : "def"}, {"member" : "libra.si.SIVelocityQuantityOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.si.SIVelocityQuantityOps.a", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/si\/package$$SIVelocityQuantityOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/si\/package$$SIVelocityQuantityOps.html", "kind" : "class"}], "libra.imperial" : [{"name" : "libra.imperial.BaseQuantityImperialOps", "shortDescription" : "", "members_class" : [{"label" : "hours", "tail" : "(): QuantityOf[A, Time, Hour]", "member" : "libra.imperial.BaseQuantityImperialOps.hours", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#hours:libra.QuantityOf[A,libra.si.Time,libra.imperial.package.Hour]", "kind" : "def"}, {"label" : "days", "tail" : "(): QuantityOf[A, Time, Day]", "member" : "libra.imperial.BaseQuantityImperialOps.days", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#days:libra.QuantityOf[A,libra.si.Time,libra.imperial.package.Day]", "kind" : "def"}, {"member" : "libra.imperial.BaseQuantityImperialOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.imperial.BaseQuantityImperialOps.a", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/imperial\/package$$BaseQuantityImperialOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/imperial\/package$$BaseQuantityImperialOps.html", "kind" : "class"}, {"name" : "libra.imperial.Day", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/imperial\/package$$Day.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/imperial\/package$$Day.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/imperial\/package$$Day.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/imperial\/package$$Day.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/imperial\/package$$Day.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/imperial\/package$$Day.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/imperial\/package$$Day.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/imperial\/package$$Day.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/imperial\/package$$Day.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/imperial\/package$$Day.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/imperial\/package$$Day.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/imperial\/package$$Day.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/imperial\/package$$Day.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/imperial\/package$$Day.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/imperial\/package$$Day.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/imperial\/package$$Day.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/imperial\/package$$Day.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/imperial\/package$$Day.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/imperial\/package$$Day.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Time units", "trait" : "libra\/imperial\/package$$Day.html", "kind" : "trait"}, {"name" : "libra.imperial.Hour", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/imperial\/package$$Hour.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/imperial\/package$$Hour.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/imperial\/package$$Hour.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/imperial\/package$$Hour.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/imperial\/package$$Hour.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/imperial\/package$$Hour.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/imperial\/package$$Hour.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/imperial\/package$$Hour.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/imperial\/package$$Hour.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/imperial\/package$$Hour.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/imperial\/package$$Hour.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/imperial\/package$$Hour.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/imperial\/package$$Hour.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/imperial\/package$$Hour.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/imperial\/package$$Hour.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/imperial\/package$$Hour.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/imperial\/package$$Hour.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/imperial\/package$$Hour.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/imperial\/package$$Hour.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "libra\/imperial\/package$$Hour.html", "kind" : "trait"}], "libra.ops" : [{"name" : "libra.ops.base", "shortDescription" : "", "object" : "libra\/ops\/base$.html", "members_object" : [{"label" : "Conversion", "tail" : "", "member" : "libra.ops.base.Conversion", "link" : "libra\/ops\/base$.html#Conversion", "kind" : "object"}, {"label" : "Conversion", "tail" : "", "member" : "libra.ops.base.Conversion", "link" : "libra\/ops\/base$.html#Conversion[A,D,F<:libra.UnitOfMeasure[D],T<:libra.UnitOfMeasure[D]]extendsAnyRef", "kind" : "class"}, {"label" : "ConversionFactor", "tail" : "", "member" : "libra.ops.base.ConversionFactor", "link" : "libra\/ops\/base$.html#ConversionFactor[A,D,F<:libra.UnitOfMeasure[D],T<:libra.UnitOfMeasure[D]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Show", "tail" : "", "member" : "libra.ops.base.Show", "link" : "libra\/ops\/base$.html#Show", "kind" : "object"}, {"label" : "Show", "tail" : "", "member" : "libra.ops.base.Show", "link" : "libra\/ops\/base$.html#Show[A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/base$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/base$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/base$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/base$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/base$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/base$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/base$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/base$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/base$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/base$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/base$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/base$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/base$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/base$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/base$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/base$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/base$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.dimensions", "shortDescription" : "", "object" : "libra\/ops\/dimensions$.html", "members_object" : [{"label" : "ShowUnit", "tail" : "", "member" : "libra.ops.dimensions.ShowUnit", "link" : "libra\/ops\/dimensions$.html#ShowUnit", "kind" : "object"}, {"label" : "ShowUnit", "tail" : "", "member" : "libra.ops.dimensions.ShowUnit", "link" : "libra\/ops\/dimensions$.html#ShowUnit[H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "ShowDimension", "tail" : "", "member" : "libra.ops.dimensions.ShowDimension", "link" : "libra\/ops\/dimensions$.html#ShowDimension", "kind" : "object"}, {"label" : "ShowDimension", "tail" : "", "member" : "libra.ops.dimensions.ShowDimension", "link" : "libra\/ops\/dimensions$.html#ShowDimension[H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "ConvertTo", "tail" : "", "member" : "libra.ops.dimensions.ConvertTo", "link" : "libra\/ops\/dimensions$.html#ConvertTo", "kind" : "object"}, {"label" : "ConvertTo", "tail" : "", "member" : "libra.ops.dimensions.ConvertTo", "link" : "libra\/ops\/dimensions$.html#ConvertTo[A,UT<:libra.UnitOfMeasure[_],H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Root", "tail" : "", "member" : "libra.ops.dimensions.Root", "link" : "libra\/ops\/dimensions$.html#Root", "kind" : "object"}, {"label" : "Root", "tail" : "", "member" : "libra.ops.dimensions.Root", "link" : "libra\/ops\/dimensions$.html#Root[P<:singleton.ops.XInt,H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.dimensions.Power", "link" : "libra\/ops\/dimensions$.html#Power", "kind" : "object"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.dimensions.Power", "link" : "libra\/ops\/dimensions$.html#Power[P<:singleton.ops.XInt,H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.dimensions.Divide", "link" : "libra\/ops\/dimensions$.html#Divide", "kind" : "object"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.dimensions.Divide", "link" : "libra\/ops\/dimensions$.html#Divide[L<:shapeless.HList,R<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.dimensions.Invert", "link" : "libra\/ops\/dimensions$.html#Invert", "kind" : "object"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.dimensions.Invert", "link" : "libra\/ops\/dimensions$.html#Invert[H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.dimensions.Multiply", "link" : "libra\/ops\/dimensions$.html#Multiply", "kind" : "object"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.dimensions.Multiply", "link" : "libra\/ops\/dimensions$.html#Multiply[L<:shapeless.HList,R<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "MultiplyMerged", "tail" : "", "member" : "libra.ops.dimensions.MultiplyMerged", "link" : "libra\/ops\/dimensions$.html#MultiplyMerged", "kind" : "object"}, {"label" : "MultiplyMerged", "tail" : "", "member" : "libra.ops.dimensions.MultiplyMerged", "link" : "libra\/ops\/dimensions$.html#MultiplyMerged[H<:shapeless.HList]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/dimensions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/dimensions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/dimensions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/dimensions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/dimensions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/dimensions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/dimensions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/dimensions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/dimensions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/dimensions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/dimensions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/dimensions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/dimensions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/dimensions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/dimensions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/dimensions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/dimensions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.fraction", "shortDescription" : "", "object" : "libra\/ops\/fraction$.html", "members_object" : [{"label" : "Valid", "tail" : "", "member" : "libra.ops.fraction.Valid", "link" : "libra\/ops\/fraction$.html#Valid", "kind" : "object"}, {"label" : "Valid", "tail" : "", "member" : "libra.ops.fraction.Valid", "link" : "libra\/ops\/fraction$.html#Valid[F<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.fraction.Multiply", "link" : "libra\/ops\/fraction$.html#Multiply", "kind" : "object"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.fraction.Multiply", "link" : "libra\/ops\/fraction$.html#Multiply[L<:libra.Fraction[_,_],R<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Subtract", "tail" : "", "member" : "libra.ops.fraction.Subtract", "link" : "libra\/ops\/fraction$.html#Subtract", "kind" : "object"}, {"label" : "Subtract", "tail" : "", "member" : "libra.ops.fraction.Subtract", "link" : "libra\/ops\/fraction$.html#Subtract[L<:libra.Fraction[_,_],R<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.fraction.Add", "link" : "libra\/ops\/fraction$.html#Add", "kind" : "object"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.fraction.Add", "link" : "libra\/ops\/fraction$.html#Add[L<:libra.Fraction[_,_],R<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Simplify", "tail" : "", "member" : "libra.ops.fraction.Simplify", "link" : "libra\/ops\/fraction$.html#Simplify", "kind" : "object"}, {"label" : "Simplify", "tail" : "", "member" : "libra.ops.fraction.Simplify", "link" : "libra\/ops\/fraction$.html#Simplify[F<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Negate", "tail" : "", "member" : "libra.ops.fraction.Negate", "link" : "libra\/ops\/fraction$.html#Negate", "kind" : "object"}, {"label" : "Negate", "tail" : "", "member" : "libra.ops.fraction.Negate", "link" : "libra\/ops\/fraction$.html#Negate[F<:libra.Fraction[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "GCD", "tail" : "", "member" : "libra.ops.fraction.GCD", "link" : "libra\/ops\/fraction$.html#GCD", "kind" : "object"}, {"label" : "GCD", "tail" : "", "member" : "libra.ops.fraction.GCD", "link" : "libra\/ops\/fraction$.html#GCD[A<:singleton.ops.XInt,B<:singleton.ops.XInt]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/fraction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/fraction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/fraction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/fraction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/fraction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/fraction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/fraction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/fraction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/fraction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/fraction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/fraction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/fraction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/fraction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/fraction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/fraction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/fraction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/fraction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/fraction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/fraction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.Merge", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/Merge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/Merge.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/Merge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/Merge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/Merge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/Merge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/Merge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/Merge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/Merge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/Merge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/Merge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/Merge.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/Merge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/Merge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/Merge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/Merge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "libra.ops.Merge.Out", "error" : "unsupported entity"}], "shortDescription" : "Typeclass for merging two records", "object" : "libra\/ops\/Merge$.html", "members_object" : [{"label" : "recordExtraMergeNotInRight", "tail" : "(ev0: Refute[Selector[R, K]], ev1: Aux[LTail, R, OutTail]): Aux[::[FieldType[K, LV], LTail], R, ::[FieldType[K, LV], OutTail]]", "member" : "libra.ops.Merge.recordExtraMergeNotInRight", "link" : "libra\/ops\/Merge$.html#recordExtraMergeNotInRight[K,LV,R<:shapeless.HList,LTail<:shapeless.HList,OutTail<:shapeless.HList](implicitev0:libra.ops.Refute[shapeless.ops.record.Selector[R,K]],implicitev1:libra.ops.Merge.Aux[LTail,R,OutTail]):libra.ops.Merge.Aux[shapeless.labelled.FieldType[K,LV]::LTail,R,shapeless.labelled.FieldType[K,LV]::OutTail]", "kind" : "implicit def"}, {"label" : "recordExtraMergeInBoth", "tail" : "(ev0: shapeless.ops.record.Selector.Aux[R, K, RV], ev1: shapeless.ops.hlist.FilterNot.Aux[R, FieldType[K, RV], RTail], ev2: Aux[LTail, RTail, OutTail]): Aux[::[FieldType[K, LV], LTail], R, ::[FieldType[K, (LV, RV)], OutTail]]", "member" : "libra.ops.Merge.recordExtraMergeInBoth", "link" : "libra\/ops\/Merge$.html#recordExtraMergeInBoth[K,LV,RV,R<:shapeless.HList,LTail<:shapeless.HList,RTail<:shapeless.HList,OutTail<:shapeless.HList](implicitev0:shapeless.ops.record.Selector.Aux[R,K,RV],implicitev1:shapeless.ops.hlist.FilterNot.Aux[R,shapeless.labelled.FieldType[K,RV],RTail],implicitev2:libra.ops.Merge.Aux[LTail,RTail,OutTail]):libra.ops.Merge.Aux[shapeless.labelled.FieldType[K,LV]::LTail,R,shapeless.labelled.FieldType[K,(LV,RV)]::OutTail]", "kind" : "implicit def"}, {"label" : "recordExtraMergeNotInLeft", "tail" : "(): Aux[HNil, R, R]", "member" : "libra.ops.Merge.recordExtraMergeNotInLeft", "link" : "libra\/ops\/Merge$.html#recordExtraMergeNotInLeft[R<:shapeless.HList]:libra.ops.Merge.Aux[shapeless.HNil,R,R]", "kind" : "implicit def"}, {"label" : "Aux", "tail" : "", "member" : "libra.ops.Merge.Aux", "link" : "libra\/ops\/Merge$.html#Aux[L<:shapeless.HList,R<:shapeless.HList,Out0<:shapeless.HList]=libra.ops.Merge[L,R]{typeOut=Out0}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/Merge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/Merge$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/Merge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/Merge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/Merge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/Merge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/Merge$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Merge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/Merge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/Merge$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/Merge$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/Merge$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/Merge$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/Merge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/Merge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/Merge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/Merge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "libra\/ops\/Merge.html", "kind" : "trait"}, {"name" : "libra.ops.quantity", "shortDescription" : "", "object" : "libra\/ops\/quantity$.html", "members_object" : [{"label" : "Show", "tail" : "", "member" : "libra.ops.quantity.Show", "link" : "libra\/ops\/quantity$.html#Show", "kind" : "object"}, {"label" : "Show", "tail" : "", "member" : "libra.ops.quantity.Show", "link" : "libra\/ops\/quantity$.html#Show[Q<:libra.Quantity[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "ConvertTo", "tail" : "", "member" : "libra.ops.quantity.ConvertTo", "link" : "libra\/ops\/quantity$.html#ConvertTo", "kind" : "object"}, {"label" : "ConvertTo", "tail" : "", "member" : "libra.ops.quantity.ConvertTo", "link" : "libra\/ops\/quantity$.html#ConvertTo[Q<:libra.Quantity[_,_],UT<:libra.UnitOfMeasure[_]]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.quantity.Power", "link" : "libra\/ops\/quantity$.html#Power", "kind" : "object"}, {"label" : "Power", "tail" : "", "member" : "libra.ops.quantity.Power", "link" : "libra\/ops\/quantity$.html#Power[Q<:libra.Quantity[_,_],P<:singleton.ops.XInt]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "EuclideanDivide", "tail" : "", "member" : "libra.ops.quantity.EuclideanDivide", "link" : "libra\/ops\/quantity$.html#EuclideanDivide", "kind" : "object"}, {"label" : "EuclideanDivide", "tail" : "", "member" : "libra.ops.quantity.EuclideanDivide", "link" : "libra\/ops\/quantity$.html#EuclideanDivide[L<:libra.Quantity[_,_],R<:libra.Quantity[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.quantity.Divide", "link" : "libra\/ops\/quantity$.html#Divide", "kind" : "object"}, {"label" : "Divide", "tail" : "", "member" : "libra.ops.quantity.Divide", "link" : "libra\/ops\/quantity$.html#Divide[L<:libra.Quantity[_,_],R<:libra.Quantity[_,_]]extendsAnyRef", "kind" : "trait"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.quantity.Invert", "link" : "libra\/ops\/quantity$.html#Invert", "kind" : "object"}, {"label" : "Invert", "tail" : "", "member" : "libra.ops.quantity.Invert", "link" : "libra\/ops\/quantity$.html#Invert[Q<:libra.Quantity[_,_]]extendsDepFn1[Q]", "kind" : "trait"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.quantity.Multiply", "link" : "libra\/ops\/quantity$.html#Multiply", "kind" : "object"}, {"label" : "Multiply", "tail" : "", "member" : "libra.ops.quantity.Multiply", "link" : "libra\/ops\/quantity$.html#Multiply[L<:libra.Quantity[_,_],R<:libra.Quantity[_,_]]extendsDepFn2[L,R]", "kind" : "trait"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.quantity.Add", "link" : "libra\/ops\/quantity$.html#Add", "kind" : "object"}, {"label" : "Add", "tail" : "", "member" : "libra.ops.quantity.Add", "link" : "libra\/ops\/quantity$.html#Add[L<:libra.Quantity[_,_],R<:libra.Quantity[_,_]]extendsDepFn2[L,R]", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/quantity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/quantity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/quantity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/quantity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/quantity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/quantity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/quantity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/quantity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/quantity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/quantity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/quantity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/quantity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/quantity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/quantity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/quantity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/quantity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/quantity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.recordExtensions", "shortDescription" : "", "object" : "libra\/ops\/recordExtensions$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/recordExtensions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/recordExtensions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/recordExtensions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/recordExtensions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/recordExtensions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/recordExtensions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/recordExtensions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/recordExtensions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/recordExtensions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/recordExtensions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/recordExtensions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/recordExtensions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/recordExtensions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/recordExtensions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/recordExtensions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/recordExtensions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/recordExtensions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/recordExtensions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/recordExtensions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "libra.ops.Refute", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/Refute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/Refute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/Refute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/Refute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/Refute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/Refute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/Refute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/Refute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/Refute.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/Refute.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/Refute.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/Refute.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/Refute.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/Refute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/Refute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/Refute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Evidence that an implicit A is not present", "object" : "libra\/ops\/Refute$.html", "members_object" : [{"label" : "refute", "tail" : "(): Refute[A]", "member" : "libra.ops.Refute.refute", "link" : "libra\/ops\/Refute$.html#refute[A]:libra.ops.Refute[A]", "kind" : "implicit def"}, {"label" : "ambiguous2", "tail" : "(ev: A): Refute[A]", "member" : "libra.ops.Refute.ambiguous2", "link" : "libra\/ops\/Refute$.html#ambiguous2[A](implicitev:A):libra.ops.Refute[A]", "kind" : "implicit def"}, {"label" : "ambiguous1", "tail" : "(ev: A): Refute[A]", "member" : "libra.ops.Refute.ambiguous1", "link" : "libra\/ops\/Refute$.html#ambiguous1[A](implicitev:A):libra.ops.Refute[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/ops\/Refute$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/ops\/Refute$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/ops\/Refute$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/ops\/Refute$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/ops\/Refute$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/ops\/Refute$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/ops\/Refute$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/ops\/Refute$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/ops\/Refute$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/ops\/Refute$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/ops\/Refute$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/ops\/Refute$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/ops\/Refute$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/ops\/Refute$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/ops\/Refute$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/ops\/Refute$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/ops\/Refute$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "libra\/ops\/Refute.html", "kind" : "trait"}], "libra" : [{"name" : "libra.Fraction", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/Fraction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/Fraction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/Fraction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/Fraction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/Fraction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/Fraction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/Fraction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Fraction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Fraction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Fraction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/Fraction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/Fraction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/Fraction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/Fraction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/Fraction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/Fraction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/Fraction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Fraction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Fraction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Represents a fraction", "trait" : "libra\/Fraction.html", "kind" : "trait"}, {"name" : "libra.Quantity", "shortDescription" : "Represents a dimensional quantity", "object" : "libra\/Quantity$.html", "members_object" : [{"label" : "quantityInnerProductSpace", "tail" : "(O: InnerProductSpace[A, R]): InnerProductSpace[Quantity[A, D], R]", "member" : "libra.Quantity.quantityInnerProductSpace", "link" : "libra\/Quantity$.html#quantityInnerProductSpace[A,R,D<:shapeless.HList](implicitO:spire.algebra.InnerProductSpace[A,R]):spire.algebra.InnerProductSpace[libra.Quantity[A,D],R]", "kind" : "implicit def"}, {"label" : "quantityVectorSpace", "tail" : "(O: VectorSpace[A, R]): VectorSpace[Quantity[A, D], R]", "member" : "libra.Quantity.quantityVectorSpace", "link" : "libra\/Quantity$.html#quantityVectorSpace[A,R,D<:shapeless.HList](implicitO:spire.algebra.VectorSpace[A,R]):spire.algebra.VectorSpace[libra.Quantity[A,D],R]", "kind" : "implicit def"}, {"label" : "quantityCoordinateSpace", "tail" : "(O: CoordinateSpace[A, R]): CoordinateSpace[Quantity[A, D], R]", "member" : "libra.Quantity.quantityCoordinateSpace", "link" : "libra\/Quantity$.html#quantityCoordinateSpace[A,R,D<:shapeless.HList](implicitO:spire.algebra.CoordinateSpace[A,R]):spire.algebra.CoordinateSpace[libra.Quantity[A,D],R]", "kind" : "implicit def"}, {"label" : "quantityMetricSpace", "tail" : "(O: MetricSpace[A, R]): MetricSpace[Quantity[A, D], R]", "member" : "libra.Quantity.quantityMetricSpace", "link" : "libra\/Quantity$.html#quantityMetricSpace[A,R,D<:shapeless.HList](implicitO:spire.algebra.MetricSpace[A,R]):spire.algebra.MetricSpace[libra.Quantity[A,D],R]", "kind" : "implicit def"}, {"label" : "quantityAdditiveAbGroup", "tail" : "(O: AdditiveAbGroup[A]): AdditiveAbGroup[Quantity[A, D]]", "member" : "libra.Quantity.quantityAdditiveAbGroup", "link" : "libra\/Quantity$.html#quantityAdditiveAbGroup[A,D<:shapeless.HList](implicitO:spire.algebra.AdditiveAbGroup[A]):spire.algebra.AdditiveAbGroup[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityAdditiveCMonoid", "tail" : "(O: AdditiveCMonoid[A]): AdditiveCMonoid[Quantity[A, D]]", "member" : "libra.Quantity.quantityAdditiveCMonoid", "link" : "libra\/Quantity$.html#quantityAdditiveCMonoid[A,D<:shapeless.HList](implicitO:spire.algebra.AdditiveCMonoid[A]):spire.algebra.AdditiveCMonoid[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityAdditiveCSemigroup", "tail" : "(O: AdditiveCSemigroup[A]): AdditiveCSemigroup[Quantity[A, D]]", "member" : "libra.Quantity.quantityAdditiveCSemigroup", "link" : "libra\/Quantity$.html#quantityAdditiveCSemigroup[A,D<:shapeless.HList](implicitO:spire.algebra.AdditiveCSemigroup[A]):spire.algebra.AdditiveCSemigroup[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityAdditiveGroup", "tail" : "(O: AdditiveGroup[A]): AdditiveGroup[Quantity[A, D]]", "member" : "libra.Quantity.quantityAdditiveGroup", "link" : "libra\/Quantity$.html#quantityAdditiveGroup[A,D<:shapeless.HList](implicitO:spire.algebra.AdditiveGroup[A]):spire.algebra.AdditiveGroup[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityAdditiveMonoid", "tail" : "(O: AdditiveMonoid[A]): AdditiveMonoid[Quantity[A, D]]", "member" : "libra.Quantity.quantityAdditiveMonoid", "link" : "libra\/Quantity$.html#quantityAdditiveMonoid[A,D<:shapeless.HList](implicitO:spire.algebra.AdditiveMonoid[A]):spire.algebra.AdditiveMonoid[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityAdditiveSemigroup", "tail" : "(O: AdditiveSemigroup[A]): AdditiveSemigroup[Quantity[A, D]]", "member" : "libra.Quantity.quantityAdditiveSemigroup", "link" : "libra\/Quantity$.html#quantityAdditiveSemigroup[A,D<:shapeless.HList](implicitO:spire.algebra.AdditiveSemigroup[A]):spire.algebra.AdditiveSemigroup[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantitySigned", "tail" : "(O: Signed[A]): Signed[Quantity[A, D]]", "member" : "libra.Quantity.quantitySigned", "link" : "libra\/Quantity$.html#quantitySigned[A,D<:shapeless.HList](implicitO:spire.algebra.Signed[A]):spire.algebra.Signed[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityPartialOrder", "tail" : "(O: PartialOrder[A]): PartialOrder[Quantity[A, D]]", "member" : "libra.Quantity.quantityPartialOrder", "link" : "libra\/Quantity$.html#quantityPartialOrder[A,D<:shapeless.HList](implicitO:spire.algebra.PartialOrder[A]):spire.algebra.PartialOrder[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityOrder", "tail" : "(O: Order[A]): Order[Quantity[A, D]]", "member" : "libra.Quantity.quantityOrder", "link" : "libra\/Quantity$.html#quantityOrder[A,D<:shapeless.HList](implicitO:spire.algebra.Order[A]):spire.algebra.Order[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityEq", "tail" : "(E: Eq[A]): Eq[Quantity[A, D]]", "member" : "libra.Quantity.quantityEq", "link" : "libra\/Quantity$.html#quantityEq[A,D<:shapeless.HList](implicitE:spire.algebra.Eq[A]):spire.algebra.Eq[libra.Quantity[A,D]]", "kind" : "implicit def"}, {"label" : "quantityModule", "tail" : "(R: Ring[A], ev: Align[D, D]): Module[Quantity[A, D], A]", "member" : "libra.Quantity.quantityModule", "link" : "libra\/Quantity$.html#quantityModule[A,D<:shapeless.HList](implicitR:spire.algebra.Ring[A],implicitev:shapeless.ops.hlist.Align[D,D]):spire.algebra.Module[libra.Quantity[A,D],A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/Quantity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/Quantity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/Quantity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/Quantity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/Quantity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/Quantity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/Quantity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/Quantity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/Quantity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/Quantity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/Quantity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/Quantity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/Quantity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/Quantity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/Quantity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Quantity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Quantity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "to", "tail" : "(to: ConvertTo[Quantity[A, D], U]): Out", "member" : "libra.Quantity.to", "link" : "libra\/Quantity.html#to[U<:libra.UnitOfMeasure[_]](implicitto:libra.ops.quantity.ConvertTo[libra.Quantity[A,D],U]):to.Out", "kind" : "def"}, {"label" : "^", "tail" : "(pow: P)(p: Power[Quantity[A, D], P]): Out", "member" : "libra.Quantity.^", "link" : "libra\/Quantity.html#^[P<:SingletonwithInt](pow:P)(implicitp:libra.ops.quantity.Power[libra.Quantity[A,D],P]):p.Out", "kind" : "def"}, {"label" : "\/~", "tail" : "(q1: Quantity[A, D1])(d: EuclideanDivide[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.\/~", "link" : "libra\/Quantity.html#\/~[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitd:libra.ops.quantity.EuclideanDivide[libra.Quantity[A,D],libra.Quantity[A,D1]]):d.Out", "kind" : "def"}, {"label" : "\/", "tail" : "(q1: Quantity[A, D1])(d: Divide[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.\/", "link" : "libra\/Quantity.html#\/[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitd:libra.ops.quantity.Divide[libra.Quantity[A,D],libra.Quantity[A,D1]]):d.Out", "kind" : "def"}, {"label" : "*", "tail" : "(q1: Quantity[A, D1])(m: Multiply[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.*", "link" : "libra\/Quantity.html#*[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitm:libra.ops.quantity.Multiply[libra.Quantity[A,D],libra.Quantity[A,D1]]):m.Out", "kind" : "def"}, {"label" : "-", "tail" : "(q1: Quantity[A, D1])(a: Add[Quantity[A, D], Quantity[A, D1]], g: AdditiveGroup[A]): Out", "member" : "libra.Quantity.-", "link" : "libra\/Quantity.html#-[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,D],libra.Quantity[A,D1]],implicitg:spire.algebra.AdditiveGroup[A]):a.Out", "kind" : "def"}, {"label" : "+", "tail" : "(q1: Quantity[A, D1])(a: Add[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.+", "link" : "libra\/Quantity.html#+[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,D],libra.Quantity[A,D1]]):a.Out", "kind" : "def"}, {"label" : "show", "tail" : "()(s: Show[Quantity[A, D]]): String", "member" : "libra.Quantity.show", "link" : "libra\/Quantity.html#show()(implicits:libra.ops.quantity.Show[libra.Quantity[A,D]]):String", "kind" : "def"}, {"label" : "power", "tail" : "()(p: Power[Quantity[A, D], P]): Out", "member" : "libra.Quantity.power", "link" : "libra\/Quantity.html#power[P<:SingletonwithInt]()(implicitp:libra.ops.quantity.Power[libra.Quantity[A,D],P]):p.Out", "kind" : "def"}, {"label" : "quotient", "tail" : "(q1: Quantity[A, D1])(d: EuclideanDivide[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.quotient", "link" : "libra\/Quantity.html#quotient[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitd:libra.ops.quantity.EuclideanDivide[libra.Quantity[A,D],libra.Quantity[A,D1]]):d.Out", "kind" : "def"}, {"label" : "divide", "tail" : "(q1: Quantity[A, D1])(d: Divide[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.divide", "link" : "libra\/Quantity.html#divide[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitd:libra.ops.quantity.Divide[libra.Quantity[A,D],libra.Quantity[A,D1]]):d.Out", "kind" : "def"}, {"label" : "multiply", "tail" : "(q1: Quantity[A, D1])(m: Multiply[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.multiply", "link" : "libra\/Quantity.html#multiply[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicitm:libra.ops.quantity.Multiply[libra.Quantity[A,D],libra.Quantity[A,D1]]):m.Out", "kind" : "def"}, {"label" : "invert", "tail" : "()(i: Invert[Quantity[A, D]]): Out", "member" : "libra.Quantity.invert", "link" : "libra\/Quantity.html#invert()(impliciti:libra.ops.quantity.Invert[libra.Quantity[A,D]]):i.Out", "kind" : "def"}, {"label" : "subtract", "tail" : "(q1: Quantity[A, D1])(a: Add[Quantity[A, D], Quantity[A, D1]], group: AdditiveGroup[A]): Out", "member" : "libra.Quantity.subtract", "link" : "libra\/Quantity.html#subtract[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,D],libra.Quantity[A,D1]],implicitgroup:spire.algebra.AdditiveGroup[A]):a.Out", "kind" : "def"}, {"label" : "negate", "tail" : "()(ev: AdditiveGroup[A]): Quantity[A, D]", "member" : "libra.Quantity.negate", "link" : "libra\/Quantity.html#negate()(implicitev:spire.algebra.AdditiveGroup[A]):libra.Quantity[A,D]", "kind" : "def"}, {"label" : "add", "tail" : "(q1: Quantity[A, D1])(a: Add[Quantity[A, D], Quantity[A, D1]]): Out", "member" : "libra.Quantity.add", "link" : "libra\/Quantity.html#add[D1<:shapeless.HList](q1:libra.Quantity[A,D1])(implicita:libra.ops.quantity.Add[libra.Quantity[A,D],libra.Quantity[A,D1]]):a.Out", "kind" : "def"}, {"member" : "libra.Quantity#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "libra.Quantity.value", "link" : "libra\/Quantity.html#value:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/Quantity.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/Quantity.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/Quantity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/Quantity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/Quantity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/Quantity.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "libra\/Quantity.html", "kind" : "case class"}, {"name" : "libra.UnitOfMeasure", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/UnitOfMeasure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/UnitOfMeasure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/UnitOfMeasure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/UnitOfMeasure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/UnitOfMeasure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/UnitOfMeasure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/UnitOfMeasure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/UnitOfMeasure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/UnitOfMeasure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/UnitOfMeasure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/UnitOfMeasure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/UnitOfMeasure.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/UnitOfMeasure.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/UnitOfMeasure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/UnitOfMeasure.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/UnitOfMeasure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/UnitOfMeasure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/UnitOfMeasure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/UnitOfMeasure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Represents a unit of a given dimension", "trait" : "libra\/UnitOfMeasure.html", "kind" : "trait"}], "libra.nonsi" : [{"name" : "libra.nonsi.Arcminute", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/nonsi\/package$$Arcminute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/nonsi\/package$$Arcminute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/nonsi\/package$$Arcminute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/nonsi\/package$$Arcminute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/nonsi\/package$$Arcminute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/nonsi\/package$$Arcminute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/nonsi\/package$$Arcminute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Arcminute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Arcminute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Arcminute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/nonsi\/package$$Arcminute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/nonsi\/package$$Arcminute.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/nonsi\/package$$Arcminute.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/nonsi\/package$$Arcminute.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/nonsi\/package$$Arcminute.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/nonsi\/package$$Arcminute.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/nonsi\/package$$Arcminute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/nonsi\/package$$Arcminute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/nonsi\/package$$Arcminute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "libra\/nonsi\/package$$Arcminute.html", "kind" : "trait"}, {"name" : "libra.nonsi.Arcsecond", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/nonsi\/package$$Arcsecond.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/nonsi\/package$$Arcsecond.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/nonsi\/package$$Arcsecond.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/nonsi\/package$$Arcsecond.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/nonsi\/package$$Arcsecond.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/nonsi\/package$$Arcsecond.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/nonsi\/package$$Arcsecond.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Arcsecond.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Arcsecond.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Arcsecond.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/nonsi\/package$$Arcsecond.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/nonsi\/package$$Arcsecond.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/nonsi\/package$$Arcsecond.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/nonsi\/package$$Arcsecond.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/nonsi\/package$$Arcsecond.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/nonsi\/package$$Arcsecond.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/nonsi\/package$$Arcsecond.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/nonsi\/package$$Arcsecond.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/nonsi\/package$$Arcsecond.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "libra\/nonsi\/package$$Arcsecond.html", "kind" : "trait"}, {"name" : "libra.nonsi.BaseQuantityNonSIOps", "shortDescription" : "", "members_class" : [{"label" : "turnsPerSecond", "tail" : "(): AngularVelocityQuantity[A, Turn, Second]", "member" : "libra.nonsi.BaseQuantityNonSIOps.turnsPerSecond", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#turnsPerSecond:libra.nonsi.package.AngularVelocityQuantity[A,libra.nonsi.package.Turn,libra.si.Second]", "kind" : "def"}, {"label" : "turn", "tail" : "(): QuantityOf[A, Angle, Turn]", "member" : "libra.nonsi.BaseQuantityNonSIOps.turn", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#turn:libra.QuantityOf[A,libra.nonsi.package.Angle,libra.nonsi.package.Turn]", "kind" : "def"}, {"label" : "gradiansPerSecond", "tail" : "(): AngularVelocityQuantity[A, Gradian, Second]", "member" : "libra.nonsi.BaseQuantityNonSIOps.gradiansPerSecond", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#gradiansPerSecond:libra.nonsi.package.AngularVelocityQuantity[A,libra.nonsi.package.Gradian,libra.si.Second]", "kind" : "def"}, {"label" : "gradian", "tail" : "(): QuantityOf[A, Angle, Gradian]", "member" : "libra.nonsi.BaseQuantityNonSIOps.gradian", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#gradian:libra.QuantityOf[A,libra.nonsi.package.Angle,libra.nonsi.package.Gradian]", "kind" : "def"}, {"label" : "radiansPerSecond", "tail" : "(): AngularVelocityQuantity[A, Radian, Second]", "member" : "libra.nonsi.BaseQuantityNonSIOps.radiansPerSecond", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#radiansPerSecond:libra.nonsi.package.AngularVelocityQuantity[A,libra.nonsi.package.Radian,libra.si.Second]", "kind" : "def"}, {"label" : "radian", "tail" : "(): QuantityOf[A, Angle, Radian]", "member" : "libra.nonsi.BaseQuantityNonSIOps.radian", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#radian:libra.QuantityOf[A,libra.nonsi.package.Angle,libra.nonsi.package.Radian]", "kind" : "def"}, {"label" : "arcsecondsPerSecond", "tail" : "(): AngularVelocityQuantity[A, Arcsecond, Second]", "member" : "libra.nonsi.BaseQuantityNonSIOps.arcsecondsPerSecond", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#arcsecondsPerSecond:libra.nonsi.package.AngularVelocityQuantity[A,libra.nonsi.package.Arcsecond,libra.si.Second]", "kind" : "def"}, {"label" : "arcminutesPerSecond", "tail" : "(): AngularVelocityQuantity[A, Arcminute, Second]", "member" : "libra.nonsi.BaseQuantityNonSIOps.arcminutesPerSecond", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#arcminutesPerSecond:libra.nonsi.package.AngularVelocityQuantity[A,libra.nonsi.package.Arcminute,libra.si.Second]", "kind" : "def"}, {"label" : "degreessPerSecond", "tail" : "(): AngularVelocityQuantity[A, Degree, Second]", "member" : "libra.nonsi.BaseQuantityNonSIOps.degreessPerSecond", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#degreessPerSecond:libra.nonsi.package.AngularVelocityQuantity[A,libra.nonsi.package.Degree,libra.si.Second]", "kind" : "def"}, {"label" : "arcsecond", "tail" : "(): QuantityOf[A, Angle, Arcsecond]", "member" : "libra.nonsi.BaseQuantityNonSIOps.arcsecond", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#arcsecond:libra.QuantityOf[A,libra.nonsi.package.Angle,libra.nonsi.package.Arcsecond]", "kind" : "def"}, {"label" : "arcminute", "tail" : "(): QuantityOf[A, Angle, Arcminute]", "member" : "libra.nonsi.BaseQuantityNonSIOps.arcminute", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#arcminute:libra.QuantityOf[A,libra.nonsi.package.Angle,libra.nonsi.package.Arcminute]", "kind" : "def"}, {"label" : "degree", "tail" : "(): QuantityOf[A, Angle, Degree]", "member" : "libra.nonsi.BaseQuantityNonSIOps.degree", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#degree:libra.QuantityOf[A,libra.nonsi.package.Angle,libra.nonsi.package.Degree]", "kind" : "def"}, {"member" : "libra.nonsi.BaseQuantityNonSIOps#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": A", "member" : "libra.nonsi.BaseQuantityNonSIOps.a", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#a:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "libra\/nonsi\/package$$BaseQuantityNonSIOps.html", "kind" : "class"}, {"name" : "libra.nonsi.Degree", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/nonsi\/package$$Degree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/nonsi\/package$$Degree.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/nonsi\/package$$Degree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/nonsi\/package$$Degree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/nonsi\/package$$Degree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/nonsi\/package$$Degree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/nonsi\/package$$Degree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Degree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Degree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Degree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/nonsi\/package$$Degree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/nonsi\/package$$Degree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/nonsi\/package$$Degree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/nonsi\/package$$Degree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/nonsi\/package$$Degree.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/nonsi\/package$$Degree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/nonsi\/package$$Degree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/nonsi\/package$$Degree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/nonsi\/package$$Degree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Angle units", "trait" : "libra\/nonsi\/package$$Degree.html", "kind" : "trait"}, {"name" : "libra.nonsi.Gradian", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/nonsi\/package$$Gradian.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/nonsi\/package$$Gradian.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/nonsi\/package$$Gradian.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/nonsi\/package$$Gradian.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/nonsi\/package$$Gradian.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/nonsi\/package$$Gradian.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/nonsi\/package$$Gradian.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Gradian.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Gradian.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Gradian.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/nonsi\/package$$Gradian.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/nonsi\/package$$Gradian.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/nonsi\/package$$Gradian.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/nonsi\/package$$Gradian.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/nonsi\/package$$Gradian.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/nonsi\/package$$Gradian.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/nonsi\/package$$Gradian.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/nonsi\/package$$Gradian.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/nonsi\/package$$Gradian.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "libra\/nonsi\/package$$Gradian.html", "kind" : "trait"}, {"name" : "libra.nonsi.Radian", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/nonsi\/package$$Radian.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/nonsi\/package$$Radian.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/nonsi\/package$$Radian.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/nonsi\/package$$Radian.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/nonsi\/package$$Radian.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/nonsi\/package$$Radian.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/nonsi\/package$$Radian.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Radian.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Radian.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Radian.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/nonsi\/package$$Radian.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/nonsi\/package$$Radian.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/nonsi\/package$$Radian.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/nonsi\/package$$Radian.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/nonsi\/package$$Radian.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/nonsi\/package$$Radian.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/nonsi\/package$$Radian.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/nonsi\/package$$Radian.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/nonsi\/package$$Radian.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "libra\/nonsi\/package$$Radian.html", "kind" : "trait"}, {"name" : "libra.nonsi.Turn", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "libra\/nonsi\/package$$Turn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "libra\/nonsi\/package$$Turn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "libra\/nonsi\/package$$Turn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "libra\/nonsi\/package$$Turn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "libra\/nonsi\/package$$Turn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "libra\/nonsi\/package$$Turn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "libra\/nonsi\/package$$Turn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Turn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Turn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "libra\/nonsi\/package$$Turn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "libra\/nonsi\/package$$Turn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "libra\/nonsi\/package$$Turn.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "libra\/nonsi\/package$$Turn.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "libra\/nonsi\/package$$Turn.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "libra\/nonsi\/package$$Turn.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "libra\/nonsi\/package$$Turn.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "libra\/nonsi\/package$$Turn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "libra\/nonsi\/package$$Turn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "libra\/nonsi\/package$$Turn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "libra\/nonsi\/package$$Turn.html", "kind" : "trait"}]};